function strct = ge_read_series_header_rdb11(pfile_name,offset)


% Open the PFile
fid=fopen(pfile_name,'r','ieee-le');         %Little-Endian format
if (fid == -1)
	error(sprintf('Could not open %s file.',pfile_name));
end

% apply offset
fseek(fid,offset,'bof');

strct = struct('base_p_file',pfile_name);
strct = setfield(strct, 'se_images', fread(fid,1,'double','ieee-le')); % Image Keys for this Series
strct = setfield(strct, 'se_unimages', fread(fid,1,'double','ieee-le')); % Unstored Image Keys for this Series
strct = setfield(strct, 'se_toarchive', fread(fid,1,'double','ieee-le')); % Unarchived Image Keys for this Series
strct = setfield(strct, 'se_pds_a', fread(fid,1,'float32','ieee-le')); % PixelData size - as stored
strct = setfield(strct, 'se_pds_c', fread(fid,1,'float32','ieee-le')); % PixelData size - Compressed
strct = setfield(strct, 'se_pds_u', fread(fid,1,'float32','ieee-le')); % PixelData size - UnCompressed
strct = setfield(strct, 'lmhor', fread(fid,1,'float32','ieee-le')); % Horizontal Landmark
strct = setfield(strct, 'start_loc', fread(fid,1,'float32','ieee-le')); % First scan location (L/S)
strct = setfield(strct, 'end_loc', fread(fid,1,'float32','ieee-le')); % Last scan location (L/S)
strct = setfield(strct, 'echo1_alpha', fread(fid,1,'float32','ieee-le')); % Echo 1 Alpha Value
strct = setfield(strct, 'echo1_beta', fread(fid,1,'float32','ieee-le')); % Echo 1 Beta Value
strct = setfield(strct, 'echo2_alpha', fread(fid,1,'float32','ieee-le')); % Echo 2 Alpha Value
strct = setfield(strct, 'echo2_beta', fread(fid,1,'float32','ieee-le')); % Echo 2 Beta Value
strct = setfield(strct, 'echo3_alpha', fread(fid,1,'float32','ieee-le')); % Echo 3 Alpha Value
strct = setfield(strct, 'echo3_beta', fread(fid,1,'float32','ieee-le')); % Echo 3 Beta Value
strct = setfield(strct, 'echo4_alpha', fread(fid,1,'float32','ieee-le')); % Echo 4 Alpha Value
strct = setfield(strct, 'echo4_beta', fread(fid,1,'float32','ieee-le')); % Echo 4 Beta Value
strct = setfield(strct, 'echo5_alpha', fread(fid,1,'float32','ieee-le')); % Echo 5 Alpha Value
strct = setfield(strct, 'echo5_beta', fread(fid,1,'float32','ieee-le')); % Echo 5 Beta Value
strct = setfield(strct, 'echo6_alpha', fread(fid,1,'float32','ieee-le')); % Echo 6 Alpha Value
strct = setfield(strct, 'echo6_beta', fread(fid,1,'float32','ieee-le')); % Echo 6 Beta Value
strct = setfield(strct, 'echo7_alpha', fread(fid,1,'float32','ieee-le')); % Echo 7 Alpha Value
strct = setfield(strct, 'echo7_beta', fread(fid,1,'float32','ieee-le')); % Echo 7 Beta Value
strct = setfield(strct, 'echo8_alpha', fread(fid,1,'float32','ieee-le')); % Echo 8 Alpha Value
strct = setfield(strct, 'echo8_beta', fread(fid,1,'float32','ieee-le')); % Echo 8 Beta Value
strct = setfield(strct, 'se_checksum', fread(fid,1,'uint32','ieee-le')); % Series Record checksum
strct = setfield(strct, 'se_complete', fread(fid,1,'int32','ieee-le')); % Series Complete Flag
strct = setfield(strct, 'se_numarch', fread(fid,1,'int32','ieee-le')); % Number of Images Archived
strct = setfield(strct, 'se_imagect', fread(fid,1,'int32','ieee-le')); % Last Image Number Used
strct = setfield(strct, 'se_numimages', fread(fid,1,'int32','ieee-le')); % Number of Images Existing
strct = setfield(strct, 'se_delta_cnt', fread(fid,1,'int32','ieee-le')); % Indicates number of updates to header
strct = setfield(strct, 'se_numunimg', fread(fid,1,'int32','ieee-le')); % Number of Unstored Images
strct = setfield(strct, 'se_toarchcnt', fread(fid,1,'int32','ieee-le')); % Number of Unarchived Images
strct = setfield(strct, 'se_datetime', fread(fid,1,'int32','ieee-le')); % Allocation Series Data/Time stamp
strct = setfield(strct, 'se_actual_dt', fread(fid,1,'int32','ieee-le')); % Actual Series Data/Time stamp
strct = setfield(strct, 'position', fread(fid,1,'int32','ieee-le')); % Patient Position
strct = setfield(strct, 'entry', fread(fid,1,'int32','ieee-le')); % Patient Entry
strct = setfield(strct, 'se_lndmrkcnt', fread(fid,1,'int32','ieee-le')); % Landmark Counter
strct = setfield(strct, 'se_lastmod', fread(fid,1,'int32','ieee-le')); % Date/Time of Last Change
strct = setfield(strct, 'ExpType', fread(fid,1,'int32','ieee-le'));
strct = setfield(strct, 'TrRest', fread(fid,1,'int32','ieee-le'));
strct = setfield(strct, 'TrActive', fread(fid,1,'int32','ieee-le'));
strct = setfield(strct, 'DumAcq', fread(fid,1,'int32','ieee-le'));
strct = setfield(strct, 'ExptTimePts', fread(fid,1,'int32','ieee-le'));
strct = setfield(strct, 'se_exno', fread(fid,1,'uint16','ieee-le')); % Exam Number
strct = setfield(strct, 'echo1_window', fread(fid,1,'uint16','ieee-le')); % Echo 1 Window Value
strct = setfield(strct, 'echo2_window', fread(fid,1,'uint16','ieee-le')); % Echo 2 Window Value
strct = setfield(strct, 'echo3_window', fread(fid,1,'uint16','ieee-le')); % Echo 3 Window Value
strct = setfield(strct, 'echo4_window', fread(fid,1,'uint16','ieee-le')); % Echo 4 Window Value
strct = setfield(strct, 'echo5_window', fread(fid,1,'uint16','ieee-le')); % Echo 5 Window Value
strct = setfield(strct, 'echo6_window', fread(fid,1,'uint16','ieee-le')); % Echo 6 Window Value
strct = setfield(strct, 'echo7_window', fread(fid,1,'uint16','ieee-le')); % Echo 7 Window Value
strct = setfield(strct, 'echo8_window', fread(fid,1,'uint16','ieee-le')); % Echo 8 Window Value
strct = setfield(strct, 'echo8_level', fread(fid,1,'int16','ieee-le')); % Echo 8 Level Value
strct = setfield(strct, 'echo7_level', fread(fid,1,'int16','ieee-le')); % Echo 7 Level Value
strct = setfield(strct, 'echo6_level', fread(fid,1,'int16','ieee-le')); % Echo 6 Level Value
strct = setfield(strct, 'echo5_level', fread(fid,1,'int16','ieee-le')); % Echo 5 Level Value
strct = setfield(strct, 'echo4_level', fread(fid,1,'int16','ieee-le')); % Echo 4 Level Value
strct = setfield(strct, 'echo3_level', fread(fid,1,'int16','ieee-le')); % Echo 3 Level Value
strct = setfield(strct, 'echo2_level', fread(fid,1,'int16','ieee-le')); % Echo 2 Level Value
strct = setfield(strct, 'echo1_level', fread(fid,1,'int16','ieee-le')); % Echo 1 Level Value
strct = setfield(strct, 'se_no', fread(fid,1,'int16','ieee-le')); % Series Number
strct = setfield(strct, 'se_typ', fread(fid,1,'int16','ieee-le')); % Series Type
strct = setfield(strct, 'se_source', fread(fid,1,'int16','ieee-le')); % Series from which prescribed
strct = setfield(strct, 'se_plane', fread(fid,1,'int16','ieee-le')); % Most-like Plane (for L/S)
strct = setfield(strct, 'scan_type', fread(fid,1,'int16','ieee-le')); % Scout or Axial (for CT)
strct = setfield(strct, 'se_uniq', fread(fid,1,'int16','ieee-le')); % The Make-Unique Flag
strct = setfield(strct, 'se_contrast', fread(fid,1,'int16','ieee-le')); % Non-zero if > 0 image used contrast(L/S)
strct = setfield(strct, 'se_pseq', fread(fid,1,'int16','ieee-le')); % Last Pulse Sequence Used (L/S)
strct = setfield(strct, 'se_sortorder', fread(fid,1,'int16','ieee-le')); % Image Sort Order (L/S)
strct = setfield(strct, 'se_nacq', fread(fid,1,'int16','ieee-le')); % Number of Acquisitions
strct = setfield(strct, 'xbasest', fread(fid,1,'int16','ieee-le')); % Starting number for baselines
strct = setfield(strct, 'xbaseend', fread(fid,1,'int16','ieee-le')); % Ending number for baselines
strct = setfield(strct, 'xenhst', fread(fid,1,'int16','ieee-le')); % Starting number for enhanced scans
strct = setfield(strct, 'xenhend', fread(fid,1,'int16','ieee-le')); % Ending number for enhanced scans
strct = setfield(strct, 'table_entry', fread(fid,1,'int16','ieee-le')); % Table position for nMR and iMR
strct = setfield(strct, 'SwingAngle', fread(fid,1,'int16','ieee-le')); % nMR - Swing Angle
strct = setfield(strct, 'LateralOffset', fread(fid,1,'int16','ieee-le')); % nMR - Offset
strct = setfield(strct, 'GradientCoil', fread(fid,1,'int16','ieee-le')); % Gradient Coil Selection 
strct = setfield(strct, 'se_subtype', fread(fid,1,'int16','ieee-le')); % supplements se_typ, see DICOM (0008,0008) 
strct = setfield(strct, 'BWRT', fread(fid,1,'int16','ieee-le')); % for fMRI till ExptTimePts 
strct = setfield(strct, 'assetcal_serno', fread(fid,1,'int16','ieee-le')); % Calibration Series number 
strct = setfield(strct, 'assetcal_scnno', fread(fid,1,'int16','ieee-le')); % Calibration Scan number
strct = setfield(strct, 'content_qualifn', fread(fid,1,'int16','ieee-le')); % PRODUCT/RESEARCH/SERVICE
strct = setfield(strct, 'purecal_serno', fread(fid,1,'int16','ieee-le')); % Calibration Series number
strct = setfield(strct, 'purecal_scnno', fread(fid,1,'int16','ieee-le')); % Calibration Scan number
strct = setfield(strct, 'short_padding', fread(fid,2,'int16','ieee-le'));
strct = setfield(strct, 'se_verscre', char(fread(fid,2,'char','ieee-le'))); % Genesis Version - Created
strct = setfield(strct, 'se_verscur', char(fread(fid,2,'char','ieee-le'))); % Genesis Version - Now
strct = setfield(strct, 'se_suid', char(fread(fid,4,'char','ieee-le'))); % Suite ID for this Series
strct = setfield(strct, 'se_alloc_key', char(fread(fid,13,'char','ieee-le'))); % Process that allocated this record
strct = setfield(strct, 'se_diskid', char(fread(fid,1,'char','ieee-le'))); % Disk ID for this Series
strct = setfield(strct, 'se_desc', char(fread(fid,65,'char','ieee-le'))); % Series Description
strct = setfield(strct, 'pr_sysid', char(fread(fid,9,'char','ieee-le'))); % Primary Receiver Suite and Host
strct = setfield(strct, 'pansysid', char(fread(fid,9,'char','ieee-le'))); % Archiver Suite and Host
strct = setfield(strct, 'anref', char(fread(fid,3,'char','ieee-le'))); % Anatomical reference
strct = setfield(strct, 'prtcl', char(fread(fid,25,'char','ieee-le'))); % Scan Protocol Name
strct = setfield(strct, 'start_ras', char(fread(fid,1,'char','ieee-le'))); % RAS letter for first scan location (L/S)
strct = setfield(strct, 'end_ras', char(fread(fid,1,'char','ieee-le'))); % RAS letter for last scan location (L/S)
strct = setfield(strct, 'series_uid', char(fread(fid,32,'char','ieee-le'))); % Series Entity Unique ID
strct = setfield(strct, 'landmark_uid', char(fread(fid,32,'char','ieee-le'))); % Landmark Unique ID
strct = setfield(strct, 'equipmnt_uid', char(fread(fid,32,'char','ieee-le'))); % Equipment Unique ID
strct = setfield(strct, 'refsopcuids', char(fread(fid,32,'char','ieee-le'))); % Ref SOP Class UID 
strct = setfield(strct, 'refsopiuids', char(fread(fid,32,'char','ieee-le'))); % Ref SOP Instance UID 
strct = setfield(strct, 'schacitval', char(fread(fid,16,'char','ieee-le'))); % Sched Proc Action Item Seq - Value 
strct = setfield(strct, 'schacitdesc', char(fread(fid,16,'char','ieee-le'))); % Sched Proc Action Item Seq - Description 
strct = setfield(strct, 'schacitmea', char(fread(fid,64,'char','ieee-le'))); % Sched Proc Action Item Seq - Meaning 
strct = setfield(strct, 'schprocstdesc', char(fread(fid,65,'char','ieee-le'))); % Sched Proc Step Desc 
strct = setfield(strct, 'schprocstid', char(fread(fid,16,'char','ieee-le'))); % Sched Proc Step ID 1
strct = setfield(strct, 'reqprocstid', char(fread(fid,16,'char','ieee-le'))); % Req Proc Step ID 1
strct = setfield(strct, 'perprocstid', char(fread(fid,16,'char','ieee-le'))); % PPS ID 
strct = setfield(strct, 'perprocstdesc', char(fread(fid,65,'char','ieee-le'))); % PPS Description

strct = setfield(strct, 'reqprocstid2', char(fread(fid,16,'char','ieee-le'))); % Req Proc Step ID 2
strct = setfield(strct, 'reqprocstid3', char(fread(fid,16,'char','ieee-le'))); % Req Proc Step ID 3
strct = setfield(strct, 'schprocstid2', char(fread(fid,16,'char','ieee-le'))); % Sched Proc Step ID 2
strct = setfield(strct, 'schprocstid3', char(fread(fid,16,'char','ieee-le'))); % Sched Proc Step ID 3
strct = setfield(strct, 'refImgUID', char(fread(fid,4,'char','ieee-le'))); % Dicom Reference Image 
strct = setfield(strct, 'PdgmStr', char(fread(fid,64,'char','ieee-le')));
strct = setfield(strct, 'PdgmDesc', char(fread(fid,256,'char','ieee-le')));
strct = setfield(strct, 'PdgmUID', char(fread(fid,64,'char','ieee-le')));
strct = setfield(strct, 'ApplName', char(fread(fid,16,'char','ieee-le')));
strct = setfield(strct, 'ApplVer', char(fread(fid,16,'char','ieee-le')));
strct = setfield(strct, 'asset_appl', char(fread(fid,12,'char','ieee-le'))); % Asset application name
strct = setfield(strct, 'scic_a', char(fread(fid,32,'char','ieee-le'))); % Scic_a values from CoilConfig.cfg
strct = setfield(strct, 'scic_s', char(fread(fid,32,'char','ieee-le'))); % Scic_s values from CoilConfig.cfg
strct = setfield(strct, 'scic_c', char(fread(fid,32,'char','ieee-le'))); % Scic_c values from CoilConfig.cfg
strct = setfield(strct, 'pure_cfg_params', char(fread(fid,64,'char','ieee-le'))); % PURE Config Parameters from pure.cfg 
strct = setfield(strct, 'se_padding', char(fread(fid,423,'char','ieee-le'))); % Spare Space
fclose(fid);
