function strct = ge_read_image_header_rdb11(pfile_name,offset)


% Open the PFile
fid=fopen(pfile_name,'r','ieee-le');         %Little-Endian format
if (fid == -1)
	error(sprintf('Could not open %s file.',pfile_name));
end

% apply offset
fseek(fid,offset,'bof');

strct = struct('base_p_file',pfile_name);
strct = setfield(strct, 'dfov', fread(fid,1,'float32','ieee-le')); % Display field of view - X (mm)
strct = setfield(strct, 'dfov_rect', fread(fid,1,'float32','ieee-le')); % Display field of view - Y (if different)
strct = setfield(strct, 'sctime', fread(fid,1,'float32','ieee-le')); % Duration of scan
strct = setfield(strct, 'slthick', fread(fid,1,'float32','ieee-le')); % Slice Thickness (mm)
strct = setfield(strct, 'scanspacing', fread(fid,1,'float32','ieee-le')); % Spacing between scans (mm?)
strct = setfield(strct, 'loc', fread(fid,1,'float32','ieee-le')); % Image location
strct = setfield(strct, 'tbldlta', fread(fid,1,'float32','ieee-le')); % Table Delta
strct = setfield(strct, 'nex', fread(fid,1,'float32','ieee-le')); % Number of Excitations
strct = setfield(strct, 'reptime', fread(fid,1,'float32','ieee-le')); % Cardiac repetition time
strct = setfield(strct, 'saravg', fread(fid,1,'float32','ieee-le')); % Average SAR
strct = setfield(strct, 'sarpeak', fread(fid,1,'float32','ieee-le')); % Peak SAR
strct = setfield(strct, 'pausetime', fread(fid,1,'float32','ieee-le')); % Pause Time
strct = setfield(strct, 'vbw', fread(fid,1,'float32','ieee-le')); % Variable Bandwidth (Hz)
strct = setfield(strct, 'user0', fread(fid,1,'float32','ieee-le')); % User Variable 0
strct = setfield(strct, 'user1', fread(fid,1,'float32','ieee-le')); % User Variable 1
strct = setfield(strct, 'user2', fread(fid,1,'float32','ieee-le')); % User Variable 2
strct = setfield(strct, 'user3', fread(fid,1,'float32','ieee-le')); % User Variable 3
strct = setfield(strct, 'user4', fread(fid,1,'float32','ieee-le')); % User Variable 4
strct = setfield(strct, 'user5', fread(fid,1,'float32','ieee-le')); % User Variable 5
strct = setfield(strct, 'user6', fread(fid,1,'float32','ieee-le')); % User Variable 6
strct = setfield(strct, 'user7', fread(fid,1,'float32','ieee-le')); % User Variable 7
strct = setfield(strct, 'user8', fread(fid,1,'float32','ieee-le')); % User Variable 8
strct = setfield(strct, 'user9', fread(fid,1,'float32','ieee-le')); % User Variable 9
strct = setfield(strct, 'user10', fread(fid,1,'float32','ieee-le')); % User Variable 10
strct = setfield(strct, 'user11', fread(fid,1,'float32','ieee-le')); % User Variable 11
strct = setfield(strct, 'user12', fread(fid,1,'float32','ieee-le')); % User Variable 12
strct = setfield(strct, 'user13', fread(fid,1,'float32','ieee-le')); % User Variable 13
strct = setfield(strct, 'user14', fread(fid,1,'float32','ieee-le')); % User Variable 14
strct = setfield(strct, 'user15', fread(fid,1,'float32','ieee-le')); % User Variable 15
strct = setfield(strct, 'user16', fread(fid,1,'float32','ieee-le')); % User Variable 16
strct = setfield(strct, 'user17', fread(fid,1,'float32','ieee-le')); % User Variable 17
strct = setfield(strct, 'user18', fread(fid,1,'float32','ieee-le')); % User Variable 18
strct = setfield(strct, 'user19', fread(fid,1,'float32','ieee-le')); % User Variable 19
strct = setfield(strct, 'user20', fread(fid,1,'float32','ieee-le')); % User Variable 20
strct = setfield(strct, 'user21', fread(fid,1,'float32','ieee-le')); % User Variable 21
strct = setfield(strct, 'user22', fread(fid,1,'float32','ieee-le')); % User Variable 22
strct = setfield(strct, 'proj_ang', fread(fid,1,'float32','ieee-le')); % Projection Angle
strct = setfield(strct, 'concat_sat', fread(fid,1,'float32','ieee-le')); % Concat Sat Type Flag
strct = setfield(strct, 'user23', fread(fid,1,'float32','ieee-le')); % User Variable 23
strct = setfield(strct, 'user24', fread(fid,1,'float32','ieee-le')); % User Variable 24
strct = setfield(strct, 'x_axis_rot', fread(fid,1,'float32','ieee-le')); % X Axis Rotation
strct = setfield(strct, 'y_axis_rot', fread(fid,1,'float32','ieee-le')); % Y Axis Rotation
strct = setfield(strct, 'z_axis_rot', fread(fid,1,'float32','ieee-le')); % Z Axis Rotation
strct = setfield(strct, 'ihtagfa', fread(fid,1,'float32','ieee-le')); % Tagging Flip Angle
strct = setfield(strct, 'ihtagor', fread(fid,1,'float32','ieee-le')); % Cardiac Tagging Orientation
strct = setfield(strct, 'ihbspti', fread(fid,1,'float32','ieee-le')); % Blood Suppression TI
strct = setfield(strct, 'rtia_timer', fread(fid,1,'float32','ieee-le')); % Float Slop Field 4
strct = setfield(strct, 'fps', fread(fid,1,'float32','ieee-le')); % Float Slop Field 5
strct = setfield(strct, 'vencscale', fread(fid,1,'float32','ieee-le')); % Scale Weighted Venc
strct = setfield(strct, 'dbdt', fread(fid,1,'float32','ieee-le')); % peak rate of change of gradient field, tesla/sec
strct = setfield(strct, 'dbdtper', fread(fid,1,'float32','ieee-le')); % limit in units of percent of theoretical curve
strct = setfield(strct, 'estdbdtper', fread(fid,1,'float32','ieee-le')); % PSD estimated limit in units of percent
strct = setfield(strct, 'estdbdtts', fread(fid,1,'float32','ieee-le')); % PSD estimated limit in Teslas/sec
strct = setfield(strct, 'saravghead', fread(fid,1,'float32','ieee-le')); % Avg head SAR
strct = setfield(strct, 'neg_scanspacing', fread(fid,1,'float32','ieee-le')); % Negative scan spacing for overlap slices
strct = setfield(strct, 'user25', fread(fid,1,'float32','ieee-le')); % User Variable 25
strct = setfield(strct, 'user26', fread(fid,1,'float32','ieee-le')); % User Variable 26
strct = setfield(strct, 'user27', fread(fid,1,'float32','ieee-le')); % User Variable 27
strct = setfield(strct, 'user28', fread(fid,1,'float32','ieee-le')); % User Variable 28
strct = setfield(strct, 'user29', fread(fid,1,'float32','ieee-le')); % User Variable 29
strct = setfield(strct, 'user30', fread(fid,1,'float32','ieee-le')); % User Variable 30
strct = setfield(strct, 'user31', fread(fid,1,'float32','ieee-le')); % User Variable 31
strct = setfield(strct, 'user32', fread(fid,1,'float32','ieee-le')); % User Variable 32
strct = setfield(strct, 'user33', fread(fid,1,'float32','ieee-le')); % User Variable 33
strct = setfield(strct, 'user34', fread(fid,1,'float32','ieee-le')); % User Variable 34
strct = setfield(strct, 'user35', fread(fid,1,'float32','ieee-le')); % User Variable 35
strct = setfield(strct, 'user36', fread(fid,1,'float32','ieee-le')); % User Variable 36
strct = setfield(strct, 'user37', fread(fid,1,'float32','ieee-le')); % User Variable 37
strct = setfield(strct, 'user38', fread(fid,1,'float32','ieee-le')); % User Variable 38
strct = setfield(strct, 'user39', fread(fid,1,'float32','ieee-le')); % User Variable 39
strct = setfield(strct, 'user40', fread(fid,1,'float32','ieee-le')); % User Variable 40
strct = setfield(strct, 'user41', fread(fid,1,'float32','ieee-le')); % User Variable 41
strct = setfield(strct, 'user42', fread(fid,1,'float32','ieee-le')); % User Variable 42
strct = setfield(strct, 'user43', fread(fid,1,'float32','ieee-le')); % User Variable 43
strct = setfield(strct, 'user44', fread(fid,1,'float32','ieee-le')); % User Variable 44
strct = setfield(strct, 'user45', fread(fid,1,'float32','ieee-le')); % User Variable 45
strct = setfield(strct, 'user46', fread(fid,1,'float32','ieee-le')); % User Variable 46
strct = setfield(strct, 'user47', fread(fid,1,'float32','ieee-le')); % User Variable 47
strct = setfield(strct, 'user48', fread(fid,1,'float32','ieee-le')); % User Variable 48
strct = setfield(strct, 'RegressorVal', fread(fid,1,'float32','ieee-le'));
strct = setfield(strct, 'SliceAsset', fread(fid,1,'float32','ieee-le')); % Slice Asset in Asset Screen 
strct = setfield(strct, 'PhaseAsset', fread(fid,1,'float32','ieee-le')); % Phase Asset in Asset Screen 
strct = setfield(strct, 'sarValues', fread(fid,4,'float32','ieee-le')); % correspoding SAR values for defined terms 
strct = setfield(strct, 'shim_fov', fread(fid,2,'float32','ieee-le'));
strct = setfield(strct, 'shim_ctr_R', fread(fid,2,'float32','ieee-le'));
strct = setfield(strct, 'shim_ctr_A', fread(fid,2,'float32','ieee-le'));
strct = setfield(strct, 'shim_ctr_S', fread(fid,2,'float32','ieee-le'));
strct = setfield(strct, 'dim_X', fread(fid,1,'float32','ieee-le')); % Image dimension - X
strct = setfield(strct, 'dim_Y', fread(fid,1,'float32','ieee-le')); % Image dimension - Y
strct = setfield(strct, 'pixsize_X', fread(fid,1,'float32','ieee-le')); % Image pixel size - X
strct = setfield(strct, 'pixsize_Y', fread(fid,1,'float32','ieee-le')); % Image pixel size - Y
strct = setfield(strct, 'ctr_R', fread(fid,1,'float32','ieee-le')); % Center R coord of plane image
strct = setfield(strct, 'ctr_A', fread(fid,1,'float32','ieee-le')); % Center A coord of plane image
strct = setfield(strct, 'ctr_S', fread(fid,1,'float32','ieee-le')); % Center S coord of plane image
strct = setfield(strct, 'norm_R', fread(fid,1,'float32','ieee-le')); % Normal R coord
strct = setfield(strct, 'norm_A', fread(fid,1,'float32','ieee-le')); % Normal A coord
strct = setfield(strct, 'norm_S', fread(fid,1,'float32','ieee-le')); % Normal S coord
strct = setfield(strct, 'tlhc_R', fread(fid,1,'float32','ieee-le')); % R Coord of Top Left Hand Corner
strct = setfield(strct, 'tlhc_A', fread(fid,1,'float32','ieee-le')); % A Coord of Top Left Hand Corner
strct = setfield(strct, 'tlhc_S', fread(fid,1,'float32','ieee-le')); % S Coord of Top Left Hand Corner
strct = setfield(strct, 'trhc_R', fread(fid,1,'float32','ieee-le')); % R Coord of Top Right Hand Corner
strct = setfield(strct, 'trhc_A', fread(fid,1,'float32','ieee-le')); % A Coord of Top Right Hand Corner
strct = setfield(strct, 'trhc_S', fread(fid,1,'float32','ieee-le')); % S Coord of Top Right Hand Corner
strct = setfield(strct, 'brhc_R', fread(fid,1,'float32','ieee-le')); % R Coord of Bottom Right Hand Corner
strct = setfield(strct, 'brhc_A', fread(fid,1,'float32','ieee-le')); % A Coord of Bottom Right Hand Corner
strct = setfield(strct, 'brhc_S', fread(fid,1,'float32','ieee-le')); % S Coord of Bottom Right Hand Corner
strct = setfield(strct, 'cal_fldstr', fread(fid,1,'uint32','ieee-le')); % Calibrated Field Strength (x10 uGauss)
strct = setfield(strct, 'im_checksum', fread(fid,1,'uint32','ieee-le')); % AcqRecon record checksum
strct = setfield(strct, 'user_usage_tag', fread(fid,1,'uint32','ieee-le')); % Defines how following user CVs are to be filled in
%                                                   /*Default value = 0x00000000*/
%                                                   /*GE range = 0x00000001 - 0x7fffffff*/
%                                                   /*Research = 0x80000000 - 0xffffffff*/
strct = setfield(strct, 'user_fill_mapMSW', fread(fid,1,'uint32','ieee-le')); % Define what process fills in the user CVs, ifcc or TIR
strct = setfield(strct, 'user_fill_mapLSW', fread(fid,1,'uint32','ieee-le')); % Define what process fills in the user CVs, ifcc or TIR
strct = setfield(strct, 'im_archived', fread(fid,1,'int32','ieee-le')); % Image Archive Flag
strct = setfield(strct, 'im_complete', fread(fid,1,'int32','ieee-le')); % Image Complete Flag
strct = setfield(strct, 'im_datetime', fread(fid,1,'int32','ieee-le')); % Allocation Image date/time stamp
strct = setfield(strct, 'im_actual_dt', fread(fid,1,'int32','ieee-le')); % Actual Image date/time stamp
strct = setfield(strct, 'tr', fread(fid,1,'int32','ieee-le')); % Pulse repetition time(usec)
strct = setfield(strct, 'ti', fread(fid,1,'int32','ieee-le')); % Pulse inversion time(usec)
strct = setfield(strct, 'te', fread(fid,1,'int32','ieee-le')); % Pulse echo time(usec)
strct = setfield(strct, 'te2', fread(fid,1,'int32','ieee-le')); % Second echo echo (usec)
strct = setfield(strct, 'tdel', fread(fid,1,'int32','ieee-le')); % Delay time after trigger (msec)
strct = setfield(strct, 'mindat', fread(fid,1,'int32','ieee-le')); % Minimum Delay after Trigger (uSec)
strct = setfield(strct, 'obplane', fread(fid,1,'int32','ieee-le')); % Oblique Plane
strct = setfield(strct, 'slocfov', fread(fid,1,'int32','ieee-le')); % Slice Offsets on Freq axis
strct = setfield(strct, 'xmtfreq', fread(fid,1,'int32','ieee-le')); % Center Frequency (0.1 Hz)
strct = setfield(strct, 'autoxmtfreq', fread(fid,1,'int32','ieee-le')); % Auto Center Frequency (0.1 Hz)
strct = setfield(strct, 'user_bitmap', fread(fid,1,'int32','ieee-le')); % Bitmap defining user CVs
strct = setfield(strct, 'iopt', fread(fid,1,'int32','ieee-le')); % Imaging Options
strct = setfield(strct, 'psd_datetime', fread(fid,1,'int32','ieee-le')); % PSD Creation Date and Time
strct = setfield(strct, 'rawrunnum', fread(fid,1,'int32','ieee-le')); % RawData Run Number
strct = setfield(strct, 'intr_del', fread(fid,1,'int32','ieee-le')); % Interimage/interloc delay (uSec)
strct = setfield(strct, 'im_lastmod', fread(fid,1,'int32','ieee-le')); % Date/Time of Last Change
strct = setfield(strct, 'im_pds_a', fread(fid,1,'int32','ieee-le')); % PixelData size - as stored
strct = setfield(strct, 'im_pds_c', fread(fid,1,'int32','ieee-le')); % PixelData size - Compressed
strct = setfield(strct, 'im_pds_u', fread(fid,1,'int32','ieee-le')); % PixelData size - UnCompressed
strct = setfield(strct, 'thresh_min1', fread(fid,1,'int32','ieee-le')); % Lower Range of Pixels 1
strct = setfield(strct, 'thresh_max1', fread(fid,1,'int32','ieee-le')); % Upper Range of Pixels 1
strct = setfield(strct, 'thresh_min2', fread(fid,1,'int32','ieee-le')); % Lower Range of Pixels 2
strct = setfield(strct, 'thresh_max2', fread(fid,1,'int32','ieee-le')); % Upper Range of Pixels 2
strct = setfield(strct, 'numslabs', fread(fid,1,'int32','ieee-le')); % Number of 3D Slabs
strct = setfield(strct, 'locsperslab', fread(fid,1,'int32','ieee-le')); % Slice Locs Per 3D Slab
strct = setfield(strct, 'overlaps', fread(fid,1,'int32','ieee-le')); % # of Slice Locs on Each Slab Which Overlap N eighbors
strct = setfield(strct, 'slop_int_4', fread(fid,1,'int32','ieee-le')); % Image Filtering 0.5/0.2T
strct = setfield(strct, 'dfax', fread(fid,1,'int32','ieee-le')); % Diffusion Direction for DW-EPI 
strct = setfield(strct, 'fphase', fread(fid,1,'int32','ieee-le')); % Number Of Phases
strct = setfield(strct, 'offsetfreq', fread(fid,1,'int32','ieee-le')); % Offset Frequency - Mag.Transfer
strct = setfield(strct, 'b_value', fread(fid,1,'int32','ieee-le')); % B-value for DW-EPI
strct = setfield(strct, 'iopt2', fread(fid,1,'int32','ieee-le')); % Imaging Option2
strct = setfield(strct, 'ihtagging', fread(fid,1,'int32','ieee-le')); % tag type 
strct = setfield(strct, 'ihtagspc', fread(fid,1,'int32','ieee-le')); % tag space 
strct = setfield(strct, 'ihfcineim', fread(fid,1,'int32','ieee-le')); % Fast CINE interpolation method
strct = setfield(strct, 'ihfcinent', fread(fid,1,'int32','ieee-le')); % Fast CINE normalization type
strct = setfield(strct, 'num_seg', fread(fid,1,'int32','ieee-le')); % YMSge05074
strct = setfield(strct, 'oprtarr', fread(fid,1,'int32','ieee-le')); % Respiratory Trigger windo
strct = setfield(strct, 'averages', fread(fid,1,'int32','ieee-le')); % Number of averages for spectro
strct = setfield(strct, 'station_index', fread(fid,1,'int32','ieee-le')); % Station Index
strct = setfield(strct, 'station_total', fread(fid,1,'int32','ieee-le')); % Station Total
strct = setfield(strct, 'iopt3', fread(fid,1,'int32','ieee-le')); % Imaging Option3
strct = setfield(strct, 'delAcq', fread(fid,1,'int32','ieee-le')); % Delay after Acquisition (MP / fMRI screen) 
strct = setfield(strct, 'imatrix_X', fread(fid,1,'int16','ieee-le')); % Image matrix size - X
strct = setfield(strct, 'imatrix_Y', fread(fid,1,'int16','ieee-le')); % Image matrix size - Y
strct = setfield(strct, 'im_exno', fread(fid,1,'uint16','ieee-le')); % Exam number for this image
strct = setfield(strct, 'img_window', fread(fid,1,'uint16','ieee-le')); % Window Value
strct = setfield(strct, 'img_level', fread(fid,1,'int16','ieee-le')); % Level Value
strct = setfield(strct, 'numecho', fread(fid,1,'int16','ieee-le')); % Number of echoes
strct = setfield(strct, 'echonum', fread(fid,1,'int16','ieee-le')); % Echo Number
strct = setfield(strct, 'im_uniq', fread(fid,1,'int16','ieee-le')); % The Make-Unique Flag
strct = setfield(strct, 'im_seno', fread(fid,1,'int16','ieee-le')); % Series Number for this image
strct = setfield(strct, 'im_no', fread(fid,1,'int16','ieee-le')); % Image Number
strct = setfield(strct, 'contmode', fread(fid,1,'int16','ieee-le')); % Image Contrast Mode
strct = setfield(strct, 'serrx', fread(fid,1,'int16','ieee-le')); % Series from which prescribed
strct = setfield(strct, 'imgrx', fread(fid,1,'int16','ieee-le')); % Image from which prescribed
strct = setfield(strct, 'screenformat', fread(fid,1,'int16','ieee-le')); % Screen Format(8/16 bit)
strct = setfield(strct, 'plane', fread(fid,1,'int16','ieee-le')); % Plane Type
strct = setfield(strct, 'im_compress', fread(fid,1,'int16','ieee-le')); % Image compression type for allocation
strct = setfield(strct, 'im_scouttype', fread(fid,1,'int16','ieee-le')); % Scout Type (AP or lateral)
strct = setfield(strct, 'contig', fread(fid,1,'int16','ieee-le')); % Continuous Slices Flag
strct = setfield(strct, 'hrtrate', fread(fid,1,'int16','ieee-le')); % Cardiac Heart Rate (bpm)
strct = setfield(strct, 'trgwindow', fread(fid,1,'int16','ieee-le')); % Trigger window (% of R-R interval)
strct = setfield(strct, 'imgpcyc', fread(fid,1,'int16','ieee-le')); % Images per cardiac cycle
strct = setfield(strct, 'xmtgain', fread(fid,1,'int16','ieee-le')); % Actual Transmit Gain (.1 db)
strct = setfield(strct, 'rcvgain1', fread(fid,1,'int16','ieee-le')); % Actual Receive Gain Analog (.1 db)
strct = setfield(strct, 'rcvgain2', fread(fid,1,'int16','ieee-le')); % Actual Receive Gain Digital (.1 db)
strct = setfield(strct, 'mr_flip', fread(fid,1,'int16','ieee-le')); % Flip Angle for GRASS scans (deg.)
strct = setfield(strct, 'cphase', fread(fid,1,'int16','ieee-le')); % Total Cardiac Phase prescribed
strct = setfield(strct, 'swappf', fread(fid,1,'int16','ieee-le')); % Swap Phase/Frequency Axis
strct = setfield(strct, 'pauseint', fread(fid,1,'int16','ieee-le')); % Pause Interval (slices)
strct = setfield(strct, 'autoxmtgain', fread(fid,1,'int16','ieee-le')); % Auto Transmit Gain (0.1 dB)
strct = setfield(strct, 'prescan_r1', fread(fid,1,'int16','ieee-le')); % PreScan R1 - Analog
strct = setfield(strct, 'prescan_r2', fread(fid,1,'int16','ieee-le')); % PreScan R2 - Digital
strct = setfield(strct, 'not_used_1', fread(fid,1,'int16','ieee-le')); % Available for use 
strct = setfield(strct, 'imode', fread(fid,1,'int16','ieee-le')); % Imaging Mode
strct = setfield(strct, 'pseq', fread(fid,1,'int16','ieee-le')); % Pulse Sequence
strct = setfield(strct, 'pseqmode', fread(fid,1,'int16','ieee-le')); % Pulse Sequence Mode
strct = setfield(strct, 'unused_monsar', fread(fid,1,'int16','ieee-le')); % Monitor SAR flag No longer is use 
strct = setfield(strct, 'ctyp', fread(fid,1,'int16','ieee-le')); % Coil Type
strct = setfield(strct, 'surfctyp', fread(fid,1,'int16','ieee-le')); % Surface Coil Type
strct = setfield(strct, 'surfcext', fread(fid,1,'int16','ieee-le')); % Extremity Coil Flag
strct = setfield(strct, 'supp_tech', fread(fid,1,'int16','ieee-le')); % SAT fat/water/none
strct = setfield(strct, 'slquant', fread(fid,1,'int16','ieee-le')); % Number of slices in this scan group
strct = setfield(strct, 'gpre', fread(fid,1,'int16','ieee-le')); % Graphically prescribed
strct = setfield(strct, 'satbits', fread(fid,1,'int16','ieee-le')); % Bitmap of SAT selections
strct = setfield(strct, 'scic', fread(fid,1,'int16','ieee-le')); % Surface Coil Intensity Correction Flag
strct = setfield(strct, 'satxloc1', fread(fid,1,'int16','ieee-le')); % R-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satxloc2', fread(fid,1,'int16','ieee-le')); % L-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satyloc1', fread(fid,1,'int16','ieee-le')); % A-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satyloc2', fread(fid,1,'int16','ieee-le')); % P-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satzloc1', fread(fid,1,'int16','ieee-le')); % S-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satzloc2', fread(fid,1,'int16','ieee-le')); % I-side SAT pulse loc rel to lndmrk
strct = setfield(strct, 'satxthick', fread(fid,1,'int16','ieee-le')); % Thickness of X-axis SAT pulse
strct = setfield(strct, 'satythick', fread(fid,1,'int16','ieee-le')); % Thickness of Y-axis SAT pulse
strct = setfield(strct, 'satzthick', fread(fid,1,'int16','ieee-le')); % Thickness of Z-axis SAT pulse
strct = setfield(strct, 'flax', fread(fid,1,'int16','ieee-le')); % Phase contrast flow axis
strct = setfield(strct, 'venc', fread(fid,1,'int16','ieee-le')); % Phase contrast velocity encoding
strct = setfield(strct, 'thk_disclmr', fread(fid,1,'int16','ieee-le')); % Slice Thickness
strct = setfield(strct, 'ps_flag', fread(fid,1,'int16','ieee-le')); % Auto/Manual Prescan flag
strct = setfield(strct, 'ps_status', fread(fid,1,'int16','ieee-le')); % Bitmap of changed values
strct = setfield(strct, 'image_type', fread(fid,1,'int16','ieee-le')); % Magnitude, Phase, Imaginary, or Real
strct = setfield(strct, 'vas_collapse', fread(fid,1,'int16','ieee-le')); % Collapse Image
strct = setfield(strct, 'proj_alg', fread(fid,1,'int16','ieee-le')); % Projection Algorithm
strct = setfield(strct, 'echo_trn_len', fread(fid,1,'int16','ieee-le')); % Echo Train Length for Fast Spin Echo
strct = setfield(strct, 'frac_echo', fread(fid,1,'int16','ieee-le')); % Fractional Echo - Effective TE Flag
strct = setfield(strct, 'prep_pulse', fread(fid,1,'int16','ieee-le')); % Preporatory Pulse Option
strct = setfield(strct, 'cphasenum', fread(fid,1,'int16','ieee-le')); % Cardiac Phase Number
strct = setfield(strct, 'var_echo', fread(fid,1,'int16','ieee-le')); % Variable Echo Flag
strct = setfield(strct, 'scanactno', fread(fid,1,'int16','ieee-le')); % Scan Acquisition Number
strct = setfield(strct, 'vasflags', fread(fid,1,'int16','ieee-le')); % Magnitude Weighting Flag
strct = setfield(strct, 'integrity', fread(fid,1,'int16','ieee-le')); % GE Image Integrity
strct = setfield(strct, 'freq_dir', fread(fid,1,'int16','ieee-le')); % Frequency Direction
strct = setfield(strct, 'vas_mode', fread(fid,1,'int16','ieee-le')); % Vascular Mode
strct = setfield(strct, 'hole', fread(fid,1,'int16','ieee-le'));
strct = setfield(strct, 'pscopts', fread(fid,1,'int16','ieee-le')); % bitmap of prescan options
strct = setfield(strct, 'asoffsetx', fread(fid,1,'int16','ieee-le')); % gradient offset in X-direction
strct = setfield(strct, 'asoffsety', fread(fid,1,'int16','ieee-le')); % gradient offset in Y-direction
strct = setfield(strct, 'asoffsetz', fread(fid,1,'int16','ieee-le')); % gradient offset in Z-direction
strct = setfield(strct, 'unoriginal', fread(fid,1,'int16','ieee-le')); % identifies image as original or unoriginal
strct = setfield(strct, 'interleaves', fread(fid,1,'int16','ieee-le')); % number of EPI shots
strct = setfield(strct, 'effechospace', fread(fid,1,'int16','ieee-le')); % effective echo spacing for EPI
strct = setfield(strct, 'viewsperseg', fread(fid,1,'int16','ieee-le')); % views per segment
strct = setfield(strct, 'rbpm', fread(fid,1,'int16','ieee-le')); % respiratory rate, breaths per min
strct = setfield(strct, 'rtpoint', fread(fid,1,'int16','ieee-le')); % respiratory trigger point as percent of max.
strct = setfield(strct, 'rcvrtype', fread(fid,1,'int16','ieee-le')); % type of receiver used
strct = setfield(strct, 'sarMode', fread(fid,1,'int16','ieee-le')); % Sar Ctrl Mode (Normal, 1st or 2nd) 
strct = setfield(strct, 'dBdtMode', fread(fid,1,'int16','ieee-le')); % dBdt Ctrl Mode (Normal, 1st or 2nd) 
strct = setfield(strct, 'govBody', fread(fid,1,'int16','ieee-le')); % Governing Body MHW/IEC/FDA  
strct = setfield(strct, 'sarDefinition', fread(fid,1,'int16','ieee-le')); % Defined terms avaialble 
strct = setfield(strct, 'no_shimvol', fread(fid,1,'int16','ieee-le'));
strct = setfield(strct, 'shim_vol_type', fread(fid,1,'int16','ieee-le'));
strct = setfield(strct, 'psdname', char(fread(fid,33,'char','ieee-le'))); % Pulse Sequence Name
strct = setfield(strct, 'proj_name', char(fread(fid,13,'char','ieee-le'))); % Projection Algorithm Name
strct = setfield(strct, 'psd_iname', char(fread(fid,13,'char','ieee-le'))); % PSD name from inside PSD
strct = setfield(strct, 'im_diskid', char(fread(fid,1,'char','ieee-le'))); % Disk ID for this Image
strct = setfield(strct, 'pdid', char(fread(fid,14,'char','ieee-le'))); % Pixel Data ID
strct = setfield(strct, 'im_suid', char(fread(fid,4,'char','ieee-le'))); % Suite id for this image
strct = setfield(strct, 'contrastIV', char(fread(fid,17,'char','ieee-le'))); % IV Contrast Agent
strct = setfield(strct, 'contrastOral', char(fread(fid,17,'char','ieee-le'))); % Oral Contrast Agent
strct = setfield(strct, 'loc_ras', char(fread(fid,1,'char','ieee-le'))); % RAS letter of image location
strct = setfield(strct, 'forimgrev', char(fread(fid,4,'char','ieee-le'))); % Foreign Image Revision
strct = setfield(strct, 'cname', char(fread(fid,17,'char','ieee-le'))); % Coil Name
strct = setfield(strct, 'im_verscre', char(fread(fid,2,'char','ieee-le'))); % Genesis Version - Created
strct = setfield(strct, 'im_verscur', char(fread(fid,2,'char','ieee-le'))); % Genesis Version - Now
strct = setfield(strct, 'im_alloc_key', char(fread(fid,13,'char','ieee-le'))); % 
strct = setfield(strct, 'ref_img', char(fread(fid,1,'char','ieee-le'))); % Reference Image Field
strct = setfield(strct, 'sum_img', char(fread(fid,1,'char','ieee-le'))); % Summary Image Field
strct = setfield(strct, 'filter_mode', char(fread(fid,16,'char','ieee-le'))); % String Slop Field 1
strct = setfield(strct, 'slop_str_2', char(fread(fid,16,'char','ieee-le'))); % String Slop Field 2
strct = setfield(strct, 'image_uid', char(fread(fid,32,'char','ieee-le'))); % Image Unique ID
strct = setfield(strct, 'sop_uid', char(fread(fid,32,'char','ieee-le'))); % Service Obj Class Unique ID
strct = setfield(strct, 'GEcname', char(fread(fid,24,'char','ieee-le'))); % GECoilname for the cname 
strct = setfield(strct, 'usedCoilData', char(fread(fid,100,'char','ieee-le'))); % Concatenated str of coilcode and chip serialID 
strct = setfield(strct, 'astcalseriesuid', char(fread(fid,32,'char','ieee-le')));
strct = setfield(strct, 'purecalseriesuid', char(fread(fid,32,'char','ieee-le')));
strct = setfield(strct, 'sys_type', char(fread(fid,64,'char','ieee-le')));
strct = setfield(strct, 'xml_psc_shm_vol', char(fread(fid,32,'char','ieee-le')));
strct = setfield(strct, 'img_hdr_padding', char(fread(fid,164,'char','ieee-le')));

fclose(fid);
